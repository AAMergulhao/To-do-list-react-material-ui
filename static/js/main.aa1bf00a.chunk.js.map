{"version":3,"sources":["components/Item/index.tsx","components/Alert/index.tsx","pages/Landing/index.tsx","App.tsx","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","flexGrow","avatarColor","color","palette","text","secondary","paper","padding","backgroundColor","primary","main","ToDo","props","useState","animation","setAnimation","classes","className","Paper","style","marginBottom","variant","Grid","container","spacing","item","sm","md","lg","Avatar","content","IconButton","aria-label","onClick","setTimeout","deleteToDo","fontSize","Alert","elevation","Landing","items","setItem","task","setTask","openAlertSuccess","setOpenAlertSuccess","openAlertError","setOpenAlertError","alertMessage","setAlertMessage","addItem","trim","indexOf","handleRemove","selectedItem","newList","filter","useEffect","animateScroll","scrollToBottom","containerId","Container","maxWidth","marginTop","direction","justify","component","xs","TextField","placeholder","fullWidth","value","onChange","e","target","onKeyPress","key","Fab","length","severity","id","height","overflow","overflowX","map","i","FormControlLabel","control","Switch","checked","isThemeDark","changeTheme","name","label","Snackbar","open","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","App","themeDark","createMuiTheme","type","background","default","blue","green","themelight","darkState","setDarkState","ThemeProvider","CssBaseline","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aa1bf00a.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Avatar, createStyles, Grid, makeStyles, Paper, Theme, IconButton } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            flexGrow: 1,\r\n        },\r\n        avatarColor: {\r\n            color: theme.palette.text.secondary,\r\n        },\r\n        paper:{\r\n            padding:\"12px\",\r\n            backgroundColor: theme.palette.primary.main,\r\n            color: \"white\"\r\n        }\r\n    }),\r\n);\r\n\r\ninterface ToDoProps {\r\n    content?: string,\r\n    deleteToDo: Function\r\n}\r\n\r\nconst ToDo: React.FC<ToDoProps> = (props: ToDoProps) => {\r\n    const [animation, setAnimation] = useState(\"pop\");\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <li className={`${animation}`} >\r\n            <Paper className={classes.paper} style={{ marginBottom: \"10px\" }} variant=\"outlined\" color=\"primary\">\r\n                <Grid container spacing={2}>\r\n                    <Grid item sm={2} md={2} lg={2}>\r\n                        <Avatar variant=\"rounded\" className={classes.avatarColor}>\r\n                            <AssignmentIcon />\r\n                        </Avatar>\r\n                    </Grid>\r\n                    <Grid item sm={8} md={8} lg={8}>\r\n                        <p className=\"truncate\">{props.content}</p>\r\n                    </Grid>\r\n                    <Grid item sm={1} md={2} lg={2}>\r\n                        <IconButton aria-label=\"delete\" style={{ color: \"red\" }} onClick={() => {\r\n                            setAnimation(\"popOut\");\r\n                            setTimeout(() => { props.deleteToDo(props.content)}, 500);\r\n                            }}>\r\n                            <DeleteIcon fontSize=\"large\" />\r\n                        </IconButton>\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default ToDo;","import React from \"react\";\r\n\r\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\r\n\r\nexport default function Alert(props: AlertProps) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n\r\n  // <Alert severity=\"error\">This is an error message!</Alert>","import React, { useEffect, useState } from 'react';\r\n\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Container, TextField, Fab, Snackbar, Switch, FormControlLabel } from '@material-ui/core';\r\n\r\nimport Add from '@material-ui/icons/Add';\r\n\r\nimport { animateScroll } from \"react-scroll\";\r\n\r\nimport ToDo from '../../components/Item';\r\nimport Alert from '../../components/Alert';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            flexGrow: 1,\r\n        }\r\n    }),\r\n);\r\n\r\ninterface LandingProps {\r\n    changeTheme: Function\r\n    isThemeDark: boolean\r\n}\r\n\r\nconst Landing: React.FC<LandingProps> = (props: LandingProps) => {\r\n    const classes = useStyles();\r\n\r\n    const [items, setItem] = useState([]);\r\n    const [task, setTask] = useState(\"\");\r\n\r\n    const [openAlertSuccess, setOpenAlertSuccess] = useState(false);\r\n    const [openAlertError, setOpenAlertError] = useState(false);\r\n    const [alertMessage, setAlertMessage] = useState(\"\");\r\n\r\n    const addItem = () => {\r\n        if (task.trim() === '') {\r\n            setOpenAlertError(true);\r\n            setAlertMessage(\"Text field is empty.\");\r\n        }\r\n        else if (items.indexOf(task) !== -1) {\r\n            setOpenAlertError(true);\r\n            setAlertMessage(\"Duplicate task\");\r\n        }\r\n        else {\r\n            setItem(items => [...items, task]);\r\n            setTask(\"\");\r\n            setOpenAlertSuccess(true);\r\n            setAlertMessage(\"Taks added successfully.\");\r\n            return;\r\n        }\r\n    };\r\n\r\n    const handleRemove = (selectedItem) =>{\r\n        const newList = items.filter((item) => item !== selectedItem);\r\n        setItem(newList);\r\n    }\r\n\r\n    useEffect(() => {\r\n        animateScroll.scrollToBottom({\r\n            containerId: \"items-list\"\r\n        });\r\n    }, [items]);\r\n\r\n    const handleKeyPress = (key) =>{\r\n        if(key === 'Enter'){\r\n            addItem()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Container maxWidth=\"md\" style={{ marginTop: \"14px\" }} >\r\n                <Grid container spacing={3} direction=\"column\" justify=\"center\">\r\n                    <Paper component=\"div\" className=\"paper\" style={{ padding: \"20px\" }} color=\"background\">\r\n                        <Grid item xs={12} container>\r\n                            <Paper component=\"div\" className=\"paper\" color=\"secondary\" >\r\n                                <Grid container spacing={3} >\r\n                                    <Grid item sm={8} lg={9}>\r\n                                        <TextField placeholder=\"Task...\" variant=\"outlined\" fullWidth={true} color=\"primary\" value={task} onChange={e => setTask(e.target.value)}\r\n                                        onKeyPress={e => handleKeyPress(e.key)} />\r\n                                    </Grid>\r\n                                    <Grid item xs={2}>\r\n                                        <Fab color=\"primary\" aria-label=\"add\" onClick={addItem}>\r\n                                            <Add />\r\n                                        </Fab>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Paper>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n\r\n                            {items.length === 0 &&\r\n                                <Alert className=\"pop\" style={{marginTop:\"10px\"}} severity=\"info\">Add tasks to view them in the list below</Alert>\r\n                            }\r\n\r\n                            {items.length >= 1 &&\r\n                                <ul id=\"items-list\" style={{ height: \"450px\", overflow: \"auto\", overflowX: \"hidden\" }}>\r\n                                {items.map(function (item, i) {\r\n                                    return <ToDo\r\n                                                key={i}\r\n                                                content={item}\r\n                                                deleteToDo={handleRemove\r\n                                                } />\r\n                                })}\r\n                            </ul>\r\n                            }\r\n                            \r\n\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <FormControlLabel\r\n                                control={<Switch color=\"primary\" checked={props.isThemeDark} onChange={() => props.changeTheme()} name=\"checkedA\" />}\r\n                                label=\"Dark Theme\"\r\n                            />\r\n                        </Grid>\r\n\r\n                    </Paper>\r\n\r\n                    <Snackbar open={openAlertError}\r\n                        autoHideDuration={3000}\r\n                        onClose={() => setOpenAlertError(false)}\r\n                        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                    >\r\n                        <Alert onClose={() => setOpenAlertError(false)} severity=\"error\">\r\n                            {alertMessage}\r\n                        </Alert >\r\n                    </Snackbar>\r\n\r\n                    <Snackbar open={openAlertSuccess}\r\n                        autoHideDuration={3000}\r\n                        onClose={() => setOpenAlertSuccess(false)}\r\n                        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                    >\r\n                        <Alert onClose={() => setOpenAlertSuccess(false)} severity=\"success\">\r\n                            {alertMessage}\r\n                        </Alert >\r\n                    </Snackbar>\r\n                </Grid>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Landing;","import React, { useState } from 'react';\r\n\r\nimport { createMuiTheme, CssBaseline } from '@material-ui/core';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\n\r\nimport blue from '@material-ui/core/colors/blue';\r\nimport green from '@material-ui/core/colors/green';\r\n\r\nimport Landing from \"./pages/Landing\";\r\n\r\nexport default function App() {\r\n\r\n  const themeDark = createMuiTheme({\r\n    palette: {\r\n      type: \"dark\",\r\n      background: {\r\n        default: blue[500]\r\n      },\r\n      text: {\r\n        primary: \"#fff\",\r\n        secondary: \"#fff\"\r\n      },\r\n      primary: {\r\n        main: blue[500],\r\n      },\r\n  \r\n      secondary: {\r\n        main: green[500],\r\n      },\r\n    }\r\n  });\r\n  \r\n  const themelight = createMuiTheme({\r\n    palette: {\r\n      type: \"light\",\r\n      background: {\r\n        default: blue[500]\r\n      },\r\n      text: {\r\n        primary: \"black\",\r\n        secondary: \"#fff\"\r\n      },\r\n      primary: {\r\n        main: blue[500],\r\n      },\r\n  \r\n      secondary: {\r\n        main: green[500],\r\n      },\r\n    }\r\n  });\r\n\r\n  const [darkState, setDarkState] = useState(true);\r\n  const theme = darkState ? themeDark : themelight;\r\n\r\n  const handleThemeChange = () => {\r\n    setDarkState(!darkState);\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <Landing changeTheme={handleThemeChange} isThemeDark={darkState} />\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\n\r\nimport \"./assets/global.css\"\r\n\r\n\r\nReactDOM.render(<App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}